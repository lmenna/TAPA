{"version":3,"sources":["../src/app.js"],"names":["LoadGoogleDataIntoMongo","query","result","data","length","console","log","readFromMongo","process","env","mongoU","url","mongoP","host","MongoClient","connect","err","db","collection","find","toArray","close"],"mappings":";;AAAA;;AACA;;AAEA;;;;;;AACA;SAGeA,uB;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGmB,mCAAgBC,KAAhB,CAHnB;;AAAA;AAGIC,YAAAA,MAHJ;;AAII,gBAAGA,MAAM,CAACC,IAAP,CAAYC,MAAZ,GAAqB,CAAxB,EAA2B;AACzBC,cAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAK,cAAAA,aAAa;AACd;;AAPL;AAAA;;AAAA;AAAA;AAAA;AASIF,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAaA,SAASC,aAAT,GAAyB;AAEvBF,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CE,OAAO,CAACC,GAAR,CAAYC,MAAxD;AACA,MAAIC,GAAG,GAAG,eAAeH,OAAO,CAACC,GAAR,CAAYC,MAA3B,GAAmC,GAAnC,GAAwCF,OAAO,CAACC,GAAR,CAAYG,MAApD,GAA6D,GAA7D,GAAmEJ,OAAO,CAACC,GAAR,CAAYI,IAA/E,GAAsF,WAAhG;;AACAC,uBAAYC,OAAZ,CAAoBJ,GAApB,EAAyB,UAASK,GAAT,EAAcC,EAAd,EAAkB;AACzC,QAAGD,GAAH,EAAQ;AACNX,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDU,GAAlD;AACD,KAFD,MAGK;AACHX,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,UAAIY,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,qBAAd,CAAjB;AACAA,MAAAA,UAAU,CAACC,IAAX,CAAgB,EAAhB,EAAoBC,OAApB,CAA4B,UAASJ,GAAT,EAAcd,MAAd,EAAsB;AAChD,YAAIc,GAAJ,EAAS;AACPX,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCU,GAAvC;AACD,SAFD,MAGK,IAAId,MAAM,CAACE,MAAX,EAAkB;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,MAAvB;AACD,SAFI,MAEE;AACLG,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;;AACDW,QAAAA,EAAE,CAACI,KAAH;AACD,OAVD;AAWD;AACF,GAnBD;AAoBD;;AAED,IAAIpB,KAAK,GAAG,6BAAZ;AACAI,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAN,uBAAuB","sourcesContent":["import \"@babel/polyfill\";\nimport {getQuery, getBigQueryData} from \"./loaders/googleLoader\";\n// npm install mongodb --save-dev\nimport { MongoClient } from 'mongodb';\n// var mongodb = require('mongodb');\n\n\nasync function LoadGoogleDataIntoMongo() {\n  var result;\n  try {\n    result = await getBigQueryData(query);\n    if(result.data.length > 0) {\n      console.log(result);\n      readFromMongo();\n    }\n  } catch(e) {\n    console.log(\"Error:\", e);\n  }\n}\n\nfunction readFromMongo() {\n\n  console.log(\"Connecting to Mongo as USER:\", process.env.mongoU);\n  var url = \"mongodb://\" + process.env.mongoU +\":\"+ process.env.mongoP + \"@\" + process.env.host + \"/ethereum\";\n  MongoClient.connect(url, function(err, db) {\n    if(err) {\n      console.log('Unable to connect to the DB server', err);\n    }\n    else {\n      console.log('Connection established');\n      var collection = db.collection('samplesite.students');\n      collection.find({}).toArray(function(err, result) {\n        if (err) {\n          console.log(\"Error retrieving data. \", err);\n        }\n        else if (result.length){\n          console.log(\"result:\", result);\n        } else {\n          console.log(\"No documents found\");\n        }\n        db.close();\n      });\n    }\n  });\n}\n\nvar query = getQuery();\nconsole.log(getQuery());\nLoadGoogleDataIntoMongo();\n"],"file":"app.js"}