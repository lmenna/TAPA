{"version":3,"sources":["../../src/utils/dbUtils.js"],"names":["getMostRecentETHData","url","process","env","mongoU","mongoP","host","MongoClient","connect","useNewUrlParser","client","db","collection","find","toArray","close","writeResultsToMongo","dataToWrite","targetCollection","insertOne","console","log"],"mappings":";;;;;;;;AAKA;;;;;;AAEA;;;;SAIgBA,oB;;;AAahB;;;;;;;;;;0BAbC;AAAA;AAAA;AAAA;AAAA;AAAA;AACKC,YAAAA,GADL,GACW,eAAeC,OAAO,CAACC,GAAR,CAAYC,MAA3B,GAAmC,GAAnC,GAAwCF,OAAO,CAACC,GAAR,CAAYE,MAApD,GAA6D,GAA7D,GAAmEH,OAAO,CAACC,GAAR,CAAYG,IAA/E,GAAsF,WADjG;AAAA;AAAA;AAAA,mBAKkBC,qBAAYC,OAAZ,CAAoBP,GAApB,EAAyB;AAAEQ,cAAAA,eAAe,EAAE;AAAnB,aAAzB,CALlB;;AAAA;AAKGC,YAAAA,MALH;AAMGC,YAAAA,EAAE,GAAGD,MAAM,CAACC,EAAP,CAAU,UAAV,CAAL;AANH;AAAA,mBAOgBA,EAAE,CAACC,UAAH,CAAc,6BAAd,EAA6CC,IAA7C,CAAkD,EAAlD,EAAsDC,OAAtD,EAPhB;;AAAA;AAAA;;AAAA;AAAA;AASGJ,YAAAA,MAAM,CAACK,KAAP;AATH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAkBcC,mB;;;;;;;0BAAf,kBAAmCC,WAAnC,EAAgDC,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAEMjB,YAAAA,GAFN,GAEY,eAAeC,OAAO,CAACC,GAAR,CAAYC,MAA3B,GAAmC,GAAnC,GAAwCF,OAAO,CAACC,GAAR,CAAYE,MAApD,GAA6D,GAA7D,GAAmEH,OAAO,CAACC,GAAR,CAAYG,IAA/E,GAAsF,WAFlG;AAAA;AAAA;AAAA,mBAMmBC,qBAAYC,OAAZ,CAAoBP,GAApB,EAAyB;AAAEQ,cAAAA,eAAe,EAAE;AAAnB,aAAzB,CANnB;;AAAA;AAMIC,YAAAA,MANJ;AAOIC,YAAAA,EAAE,GAAGD,MAAM,CAACC,EAAP,CAAU,UAAV,CAAL;AAPJ;AAAA,mBAQUA,EAAE,CAACC,UAAH,CAAcM,gBAAd,EAAgCC,SAAhC,CAA0CF,WAA1C,CARV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWIG,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AAXJ;AAAA;AAcMX,YAAAA,MAAM,CAACK,KAAP;AAdN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/* dbUtils.js\n * desc: Utilities for interacting with MongoDB transactional data store\n *       hosted on mlab.com.\n */\n\nimport { MongoClient } from 'mongodb';\n\n/* getMostRecentETHData()\n * desc: Reads ETH data from MongoDB\n * return: json block of data for ETH daily transaction activity\n */\n async function getMostRecentETHData() {\n  var url = \"mongodb://\" + process.env.mongoU +\":\"+ process.env.mongoP + \"@\" + process.env.host + \"/ethereum\";\n  var client;\n  var db;\n  try {\n    client = await MongoClient.connect(url, { useNewUrlParser: true });\n    db = client.db(\"ethereum\");\n    return await db.collection(\"marketdata.eth_transactions\").find({}).toArray();\n  } finally {\n    client.close();\n  }\n}\n\n/* writeResultsToMongo()\n * desc: Writes results from the google BigQuery into MongoDB on the cloud\n * param: dataToWrite - the json block to write to MongoDB.\n *\n */\nasync function writeResultsToMongo(dataToWrite, targetCollection) {\n\n  var url = \"mongodb://\" + process.env.mongoU +\":\"+ process.env.mongoP + \"@\" + process.env.host + \"/ethereum\";\n  var client;\n  var db;\n  try {\n    client = await MongoClient.connect(url, { useNewUrlParser: true });\n    db = client.db(\"ethereum\");\n    await db.collection(targetCollection).insertOne(dataToWrite);\n  }\n  catch(err) {\n    console.log(\"Error writing to DB:\", err);\n  }\n  finally {\n      client.close();\n  }\n}\n\nexport {writeResultsToMongo, getMostRecentETHData};\n"],"file":"dbUtils.js"}